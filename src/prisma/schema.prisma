// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model EmRole {
roleId          Int         @map("role_id")           @id @default(autoincrement())
roleName        String      @map("role_name")         @db.VarChar(30)
// roleUpdatedAt DateTime @map("role_updated_at") @updatedAt
// roleDeletedAt DateTime @map("role_deleted_at")
// roleCreatedAt DateTime @map("role_created_at") @default(now())
users EmUser[]
@@map("em_roles")
}

enum Gender {
  MALE
  FEMALE
}

model EmUser {
userId          Int         @map("user_id")           @id @default(autoincrement())
userFirstName   String      @map("user_first_name")   @db.VarChar(30)
userLastName    String      @map("user_last_name")    @db.VarChar(30)
userAge         Int?        @map("user_age")          @db.Integer
userEmail       String      @map("user_email")        @db.VarChar(30)
userPhone       String?      @map("user_phone")        @db.VarChar(10)
userCity        String?      @map("user_city_name")    @db.VarChar(20)
userState       String?      @map("user_state_name")   @db.VarChar(20)
userCountry     String?      @map("user_country_name") @db.VarChar(20)
userUpdatedAt   DateTime?   @map("user_updated_at")   @default(now()) 
userDeletedAt   DateTime?   @map("user_deleted_at")
userCreatedAt   DateTime    @map("user_created_at")   @default(now()) 
userPassword    String      @map("user_password")     @db.VarChar(200)
userGender      Gender?      @map("user_gender")
userRoleId      Int         @map("user_role_id")      @default(2)
role            EmRole      @relation(fields: [userRoleId], references: [roleId])
projects        EmProject[] @relation("UserProjects")

@@index([userRoleId])
@@map("em_users")
}

model EmCountry {
countryId       Int         @map("country_id")         @id @default(autoincrement())
countryName     String      @map("country_name")       @db.VarChar(30)
states EmState[]
@@map("em_countries")
}
model EmState {
stateId         Int         @map("state_id")            @id @default(autoincrement())
countryId       Int         @map("country_id")
stateName       String      @map("state_name")          @db.VarChar(30)
country         EmCountry   @relation(fields:[countryId],references:[countryId])
cities EmCities[]
@@index([countryId])
@@map("em_states")
}
model EmCities {
cityId          Int         @map("city_id")              @id @default(autoincrement())
stateId         Int         @map("state_id")
cityName        String      @map("city_name")             @db.VarChar(30)
state           EmState     @relation(fields:[stateId],references:[stateId])
@@index([stateId])
@@map("em_cities")
}
model EmProject {
  projectId           Int       @id @default(autoincrement()) @map("project_id")
  projectUserId       Int       @map("project_user_id")
  projectName         String?   @map("project_name") @db.VarChar(255)
  projectDescription  String?   @map("project_description") @db.VarChar(200)
  projectTech         String?   @map("project_tech") @db.VarChar(100)
  projectStatus       String?   @map("project_status") @db.VarChar(100)
  projectStartDate    DateTime? @map("project_startDate") @db.Date
  projectDeadlineDate DateTime? @map("project_deadlineDate") @db.Date
  projectLead         String?   @map("project_lead") @db.VarChar(200)
  projectManager      String?   @map("project_manager") @db.VarChar(200)
  projectClient       String?   @map("project_client") @db.VarChar(200)
  managementTool      String?   @map("management_tool") @db.VarChar(100)
  managementUrl       String?   @map("management_url") @db.VarChar(200)
  repoTool            String?   @map("repo_tool") @db.VarChar(100)
  repoUrl             String?   @map("repo_url") @db.VarChar(200)
  user                EmUser    @relation("UserProjects", fields: [projectUserId], references: [userId])

  @@map("em_projects")
}
